#############################
# File:       zshrc.common
# Author:     Zack Fleischman
#############################

#######
# Paths 
#######
SCRIPT_PATHS=$(find ~/repos/scripts/ -type d | grep -v "\.git" | sed "s,/$,," | tr '\n' ':')
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:$HOME/scripts:$SCRIPT_PATHS:/usr/texbin"
export PYTHONPATH="$PYTHONPATH:$HOME/repos/scripts/python:$HOME/repos/scripts/django"
#export MANPATH="/usr/local/man:$MANPATH"
#export CDPATH=".:/Users/zfleischman/repos/farm2"


####################
# oh-my-zsh Settings
####################
# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME=burner

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git)

source $ZSH/oh-my-zsh.sh

autoload run-help
HELPDIR=/usr/local/share/zsh/help

# zsh options
setopt no_histverify

###############
# Misc Settings
###############

# virtualenvwrapper
export WORKON_HOME=~/.virtualenvs
source /usr/local/bin/virtualenvwrapper.sh

# Tmux window naming
DISABLE_AUTO_TITLE=true

# Get rid of python's pyc files
export PYTHONDONTWRITEBYTECODE=1
alias setpyc='export PYTHONDONTWRITEBYTECODE=0'
alias unsetpyc='export PYTHONDONTWRITEBYTECODE=1'

#################
# Command aliases
#################

# Open config files
alias sz='source ~/.zshrc'
alias ez='vim ~/.zshrc.common'
alias ezz='vim ~/.zshrc'
alias eg='vim ~/.gitconfig'
alias ev='vim ~/.vimrc'
alias ep='vim ~/.vimplugins'

# Check Computer Hogs
alias htop='sudo htop'
alias mem='top -o mem'
alias cpu='top -o cpu'

# Python
alias py='ipython -i ~/repos/scripts/zpython/zutil.py' # Start ipython with my utility script
alias zutil='vim ~/repos/scripts/zpython/zutil.py' # Modify my python utility script
alias pudb='python -m pudb.run' # Python Debugger
alias pyc='find . -name "*.pyc" -type f -delete' # Delete pyc files in directory (recursively)
alias pydocs='pydoc -p 9999'

# Heroku
alias h='heroku'
alias hp='git push heroku `git rev-parse --abbrev-ref HEAD`:master'
alias hm='heroku run python manage.py migrate' # Migrate the remote apps Django database
alias hs='heroku run python manage.py shell

# Git Shortcuts
alias d='git difftool'
alias dd='git diff HEAD --color=always'
alias ddd='git diff HEAD --color=always | cat'
alias s='git status'
alias br='git branch -r'
alias sl='git stash list | awk '"'"' BEGIN { print "" } {print "",$0} END { print "" }'"'"''
alias l='gitlog -10'
alias l2='gitlog -20'
alias l3='gitlog -30' 
alias l4='gitlog -40'
alias ldate='gitlogdate -10'
alias l2date='gitlogdate -20'
alias l3date='gitlogdate -30'
alias l4date='gitlogdate -40'
alias lx='gitlog'
alias lxdate='gitlogdate'
alias gf='git fetch'
alias r='git pull --rebase'
alias p='git push -u origin `git rev-parse --abbrev-ref HEAD`'
alias c='git commit -am'
alias u='git pull'
alias has='git branch --contains'
alias branch='git rev-parse --abbrev-ref HEAD'
alias commit='git rev-parse --verify HEAD'
alias reset='git reset --hard HEAD'
alias tool1='git config --global diff.tool Kaleidoscope'
alias tool2='git config --global diff.tool p4mergetool'
alias merge='git mergetool'
alias cm='git commit --author="Zack Fleischman <zFleischman@gmail.com>"' # Commit as my personal account
alias aa='git commit --amend --author "Zack Fleischman <zFleischman@gmail.com>" --no-edit' # Ammend last commit with my personal email as author
alias sl='git log --pretty=format:"%Cred%h%Creset - %C(bold blue)<%an>%Creset %Cgreen(%cr)%Creset %C(cyan)- %C(reset)%s %C(yellow)%d%Creset" --abbrev-commit --date=relative --color=always | grep --color=always -i' # Search git log
alias mm='(current_branch=`git rev-parse --abbrev-ref HEAD`; git checkout master; git pull; git checkout $current_branch; git merge master)' # Merge current branch with master

# Misc
alias ll='ls -la'
alias pp='prettyprint'
alias x='chmod 755' # Grant executable permissions
alias pi='ping google.com'
alias myip="ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1' | head -1" # Current IP Address
alias resume='pdflatex ~/repos/resume/src/resume.tex;mv ~/repos/resume/src/resume.pdf ~/repos/resume/resume.pdf;open ~/repos/resume/resume.pdf' # Build my resumÃ©
alias tj='vim -t' # Vim Tag Jump
alias bike='python ~/repos/BikeCommuter/BikeCommute.py' # Bike Commute app
alias tags='f;ctags -R .' # Generate tags for a git project


#################
# Servers Aliases
#################
alias bro='ssh -i ~/.ssh/zack-bro-your-bros-ssh-keys.pem ubuntu@zack-dev.broyourbros.com'


################
# Path Shortcuts
################

# All Repos
alias a='cd ~/repos'

# Scripts
alias q='cd ~/repos/scripts'

# Config
alias ac='cd ~/repos/config'


##################
# Counsyl Specific
##################
#setgrowlrip_command="echo 'export GROWLR_IP=`myip`' > ~/.growlrc"
#alias sg='(cd ~/repos/vagrant/boxes/testv-dev && vagrant ssh -- -t "$setgrowlrip_command")'
#sg # just set this up each time we open a local mac console. TODO: Migrate this to a .zshrc.mac file
#alias z='cd ~/repos/vagrant/boxes/testv-dev;(sg && vagrant ssh -- -t "/bin/bash ~/repos/scripts/util/start_tmux.counsyl")||(vagrant up && sg && vagrant ssh -- -t "/bin/bash ~/repos/scripts/util/start_tmux.counsyl")'
#alias form='java -jar /Users/zfleischman/repos/formality/build/libs/formality-1.4.0.jar'

###########
# Functions
###########

# Extract from a zipped file
extract () {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xvjf $1 && cd $(echo $1 | sed 's/.tar.bz2//')    ;;
            *.tar.gz)    tar xvzf $1 && cd $(echo $1 | sed 's/.tar.gz//')    ;;
            *.bz2)       bunzip2 $1 && cd $(echo $1 | sed 's/.bz2//')    ;;
            *.rar)       unrar x $1 && cd $(echo $1 | sed 's/.rar//')    ;;
            *.gz)        gunzip $1 && cd $(echo $1 | sed 's/.gz//')    ;;
            *.tar)       tar xvf $1 && cd $(echo $1 | sed 's/.tar//')    ;;
            *.tbz2)      tar xvjf $1 && cd $(echo $1 | sed 's/.tbz2//')    ;;
            *.tgz)       tar xvzf $1 && cd $(echo $1 | sed 's/.tgz//')    ;;
            *.zip)       unzip $1 && cd $(echo $1 | sed 's/.zip//')    ;;
            *.Z)         uncompress $1 && cd $(echo $1 | sed 's/.Z//')    ;;
            *.7z)        7z x $1 && cd $(echo $1 | sed 's/.7z//')    ;;
            *)           echo "don't know how to extract '$1'..." ;;
        esac
    else
        echo "'$1' is not a valid file!"
    fi
}

# Ctrl-Z to switch between vim and the command line
fancy-ctrl-z () {
    if [[ $#BUFFER -eq 0 ]]; then
        BUFFER="fg"
        zle accept-line
    else
        zle push-input
        zle clear-screen
    fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

# calc (Calculator)
calc () {
    bc <<< "$@"
}
calcl () {
    bc -l <<< "$@"
}

#########################
# Source External Scripts
#########################
source ~/repos/scripts/util/findfile
source ~/repos/scripts/util/findstring
source ~/repos/scripts/util/exportColors
source ~/.savvyrc

