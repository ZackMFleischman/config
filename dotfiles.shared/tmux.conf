set -g default-shell '/bin/zsh'
bind-key c new-window -n '/bin/zsh'

# make tmux display things in 256 colors
set -g default-terminal "screen-256color"

# set scrollback history to 30000 (30k)
set -g history-limit 30000

# set d as the default prefix key combination
# and unbind C-b to free it up
unbind C-b
set -g prefix C-a

# use send-prefix to pass d through to application
bind C-a send-prefix

# shorten command delay
set -sg escape-time 1

# set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

# Reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Reorder tmux window numbers
bind-key R run "for i in $(tmux lsw|awk -F: '{print $1}'); do tmux movew -s \$i; done"

# use PREFIX | to split window horizontally and PREFIX - to split vertically
bind v split-window -h
bind s split-window -v


# Move windows around
bind -r - swap-window -t -1
bind -r = swap-window -t +1

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Next/Previous window
bind -r m select-window -t :+
bind -r n select-window -t :-
bind Space last-window

# resize panes using PREFIX H, J, K, L
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
bind -r U resize-pane -L 85
bind -r I resize-pane -R 85

# C-i for even-vertical arrangement and C-o to zoom current pane
bind-key C-i select-layout even-vertical
bind-key C-v select-layout even-horizontal

# Dont ask for confirmation before killing
bind-key & kill-window
bind-key x kill-pane

# Sync panes
bind C-s set-window-option synchronize-panes

# Don't rename my damn window
set-window-option -g automatic-rename off

# ---------------------
# Copy & Paste
# ---------------------

# Copy-paste integration
set-option -g default-command "reattach-to-user-namespace -l /bin/zsh"

# Bind u to copy mode
bind u copy-mode

# Use vim keybindings in copy mode
set-window-option -g mode-keys vi
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-pipe "reattach-to-user-namespace pbcopy"
#unbind p
#bind p run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# ----------------------
# Pretty Colors
# ----------------------
# Set pane colors - highlight the active pane
set-option -g pane-border-fg colour240 #base02
set-option -g pane-active-border-fg colour33 #blue

# Colorize messages in the command line
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# ----------------------
# Status Bar
# -----------------------
set-option -g status on                # turn the status bar on
set -g status-interval 5               # set update frequencey (default 15 seconds)

# Visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Set color for status bar and the unselected windows
set-option -g status-bg               colour240
set-window-option -g window-status-bg colour240 
set-window-option -g window-status-fg colour17
set-option -g status-fg colour17
set-option -g status-attr dim 
set-window-option -g window-status-attr dim

# Set color for currently selected window
set-window-option -g window-status-current-fg colour75 
set-window-option -g window-status-current-bg colour234 
set-window-option -g window-status-current-attr bright

set -g status-left 'â˜… '

#-----------------------
# Debug: Show Colors
#-----------------------
#for i in {0..255} ; do
#    printf "\x1b[38;5;${i}mcolour${i}\n"
#done
