set -g default-shell '/bin/zsh'
bind-key c new-window -n 'zsh'

# make tmux display things in 256 colors
set -g default-terminal "screen-256color"

# set scrollback history to 30000 (30k)
set -g history-limit 30000

# Set what happens after copying
set -g @yank_action 'copy-pipe'
#set -g @yank_action 'copy-pipe-and-cancel'

# (We used Keyboard-Maestro here to make CMD+s or CMD+n the prefix instead)
# set a as the default prefix key combination
# and unbind C-b to free it up
#unbind C-b
#set -g prefix C-a

# use send-prefix to pass d through to application
#bind C-a send-prefix

# shorten command delay
set -sg escape-time 1

# set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

# Reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Kill the server
bind k kill-server

# Reorder tmux window numbers
bind-key R run "for i in $(tmux lsw|awk -F: '{print $1}'); do tmux movew -s \$i; done"

# use PREFIX | to split window horizontally and PREFIX - to split vertically
bind v split-window -h
bind s split-window -v

# Move windows around
bind -r - swap-window -t -1
bind -r = swap-window -t +1

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Switch to last used window
bind Space last-window

# Maximize/Normalize Window
bind -r m resize-pane -Z

# resize panes using PREFIX H, J, K, L
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
bind -r U resize-pane -L 85
bind -r I resize-pane -R 85


set -g mouse on
bind m set -g mouse on
bind M set -g mouse off

bind A attach-session -t designer
bind F attach-session -t tool
bind S attach-session -t client
bind D attach-session -t hub

# C-i for even-vertical arrangement and C-o to zoom current pane
bind-key C-i select-layout even-vertical
bind-key C-v select-layout even-horizontal

# Dont ask for confirmation before killing
bind-key & kill-window
bind-key x kill-pane

# Sync panes
bind C-s set-window-option synchronize-panes

# Don't rename my damn window
set-window-option -g automatic-rename off

# ---------------------
# Copy & Paste
# ---------------------

# Copy-paste integration
set-option -g default-command "reattach-to-user-namespace -l /bin/zsh"

# Bind u to copy mode
bind u copy-mode

# Use vim keybindings in copy mode
set-window-option -g mode-keys vi

# Version 1
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-pipe "reattach-to-user-namespace pbcopy"

# Version 2
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

#unbind p
#bind p run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# bind-key [-cnr] [-T key-table] key command [arguments]

# Double LMB Select & Copy (Word)
#bind-key -T copy-mode-vi DoubleClick1Pane \
    #select-pane \; \
    #send-keys -X select-word-no-clear \; \
    #send-keys -X copy-pipe-no-clear "pbcopy"
#bind-key -n DoubleClick1Pane \
    #select-pane \; \
    #copy-mode -M \; \
    #send-keys -X select-word \; \
    #send-keys -X copy-pipe-no-clear "pbcopy"

bind-key -T copy-mode-vi DoubleClick1Pane \
    select-pane \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe "reattach-to-user-namespace pbcopy" \; \
    send-keys -X cancel

bind-key -n DoubleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe "reattach-to-user-namespace pbcopy" \; \
    send-keys -X cancel


# Triple LMB Select & Copy (Line)
#bind-key -T copy-mode-vi TripleClick1Pane \
    #select-pane \; \
    #send-keys -X select-line \; \
    #send-keys -X copy-pipe-no-clear "pbcopy"
#bind-key -n TripleClick1Pane \
    #select-pane \; \
    #copy-mode -M \; \
    #send-keys -X select-line \; \
    #send-keys -X copy-pipe-no-clear "pbcopy"



# ----------------------
# Pretty Colors
# ----------------------

## Colorize messages in the command line
#set-option -g message-bg black #base02
#set-option -g message-fg brightred #orange

# ----------------------
# Status Bar
# -----------------------
set-option -g status on                # turn the status bar on
set -g status-interval 5               # set update frequencey (default 15 seconds)

# Visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Colors
set-option -g status-style bg=colour240,fg=colour17
set-window-option -g window-status-style bg=colour240,fg=colour17
set-window-option -g window-status-current-style bg=colour234,fg=colour75,bright
set-window-option -g window-status-current-style bg=colour234,fg=colour75,bright
set-window-option -g window-status-activity-style bg=colour8
set-window-option -g pane-active-border-style fg=colour33
set-window-option -g pane-border-style fg=colour240
set-window-option -g message-style bg=black,fg=brightred

set -g status-left 'â˜… '

# Style Option Names:
#message-command-style style
#message-style style
#mode-style style
#pane-active-border-style style
#pane-border-style style
#status-left-style style
#status-right-style style
#status-style style
#window-active-style style
#window-status-activity-style style
#window-status-bell-style style
#window-status-current-style style
#window-status-last-style style
#window-status-style style
#window-style style


#-----------------------
# Debug: Show Colors
# Copy and run in the terminal.
#-----------------------
#for i in {0..255} ; do
    #printf "\x1b[38;5;${i}mcolour${i}\n"
#done
